"norm_mu",
"$$(\\color{blue}{\\mu})$$
Adja meg a sokasági átlag értékét:",
min = -10,
max = 10,
value = 0,
step = 0.5
)
})
output$norm_szor_slider <- renderUI({
sliderInput(
"norm_szor",
"$$(\\color{red}{\\sigma})$$
Adja meg a sokasági szórás értékét:",
min = 0.1,
max = 10,
value = 0.5,
step = 0.1
)
})
output$norm_x_slider <- renderUI({
sliderInput(
"norm_x",
"$$(\\color{green}{x})$$
Adja meg az x értékét:",
min = round(norm_plot_range3(),digits = 1),
max = round(norm_plot_range2(),digits = 1),
value = 0,
step = 0.1
)
})
output$norm_x_intervallum_slider <- renderUI({
sliderInput(
"norm_x_intervallum",
"$$(\\color{green}{\\ x_1,\\ x_2})$$
Adja meg az intervallumot:",
min = round(norm_plot_range3(),digits = 1),
max = round(norm_plot_range2(),digits = 1),
value = c(-1, 1),
step = 0.1
)
})
output$norm_valsz_input <- renderUI({
valsz_input_folytonos("norm_tipus")
})
}
# Eredmények
{
norm_fx_eredmeny <- reactive({
round(dnorm(norm_x(), norm_mu(), norm_szor()),digits = 3)
})
norm_varhato_ertek <- reactive({
norm_mu()
})
norm_szoras <-
reactive({
round(norm_szor()^2,digits = 3)
})
norm_kisebb_valoszinuseg <- reactive({
pnorm(
norm_x(),
norm_mu(),
norm_szor()
)
})
norm_nagyobb_valoszinuseg <- reactive({
1 - pnorm(
norm_x(),
norm_mu(),
norm_szor()
)
})
norm_intervallum_valoszinuseg <- reactive({
pnorm(input$norm_x_intervallum[2], norm_mu(), norm_szor()) -
pnorm(input$norm_x_intervallum[1], norm_mu(), norm_szor())
})
norm_valoszinuseg <- reactive({
valoszinuseg_folytonos(input$norm_tipus, norm_kisebb_valoszinuseg(), norm_nagyobb_valoszinuseg(), norm_intervallum_valoszinuseg())
})
}
# Plot
{
norm_plot_range <- reactive({
seq(norm_plot_range3(), norm_plot_range2(), 0.01)
})
norm_plot_range2 <- reactive({
norm_mu() + 4 * norm_szor()
})
norm_plot_range3 <- reactive({
norm_mu() - 4 * norm_szor()
})
# P(X<x)
{
norm_sulyfvg_kisebb_x <-
reactive({
c(0, seq(min(norm_plot_range()), norm_x(), 0.01), norm_x())
})
norm_sulyfvg_kisebb_y <-
reactive({
c(0, dnorm(
seq(
min(norm_plot_range()), norm_x(), 0.01
),
norm_mu(), norm_szor()
), 0)
})
}
# P(X>x)
{
norm_sulyfvg_nagyobb_x <-
reactive({
c(
norm_x(),
seq(norm_x(), max(norm_plot_range()), 0.01),
norm_plot_range2()
)
})
norm_sulyfvg_nagyobb_y <-
reactive({
c(0, dnorm(
seq(
norm_x(), max(norm_plot_range()), 0.01
),
norm_mu(), norm_szor()
), 0)
})
}
# P(x1<X<x2)
{
norm_sulyfvg_intervallum_x <-
reactive({
c(
input$norm_x_intervallum[1],
seq(
input$norm_x_intervallum[1],
input$norm_x_intervallum[2],
0.01
),
input$norm_x_intervallum[2]
)
})
norm_sulyfvg_intervallum_y <-
reactive({
c(0, dnorm(
seq(
input$norm_x_intervallum[1],
input$norm_x_intervallum[2],
0.01
),
norm_mu(),
norm_szor()
), 0)
})
}
norm_sulyfvg_range_x <- reactive({
norm_plot_range()
})
norm_sulyfvg_range_y <- reactive({
c(0, max(
dnorm(norm_plot_range(), norm_mu(), norm_szor())
) + 0.1)
})
norm_eloszlasfvg_range_x <- reactive({
norm_plot_range()
})
norm_eloszlasfvg_range_y <- reactive({
pnorm(norm_plot_range(), norm_mu(), norm_szor())
})
norm_eloszlasfvg_range <- reactive({
norm_plot_range()
})
output$norm_plot <- renderPlotly({
fuggveny_folytonos(
norm_sulyfvg_kisebb_x(),
norm_sulyfvg_kisebb_y(),
norm_sulyfvg_nagyobb_x(),
norm_sulyfvg_nagyobb_y(),
input$norm_tipus,
norm_sulyfvg_intervallum_x(),
norm_sulyfvg_intervallum_y(),
norm_sulyfvg_range_x(),
norm_sulyfvg_range_y(), norm_eloszlasfvg_range_x(), norm_eloszlasfvg_range_y(), norm_eloszlasfvg_range()
)
})
}
# ValueBox
{
output$norm_box1 <- renderValueBox({
vb(norm_varhato_ertek(), "norm_varhato_ertek_keplet")
})
output$norm_box2 <- renderValueBox({
vb(norm_szoras(), "norm_szoras_keplet")
})
output$norm_box3 <- renderValueBox({
vb(norm_valoszinuseg(), "norm_valoszinuseg_keplet")
})
}
# Teszt
{
output$norm_teszt_input <- renderUI({
teszt_input("norm_valasz", "(Adja meg a válaszait legalább 3 tizedesjegyre kerekítve)
Valószínűség:", input$norm_ujra)
})
output$norm_teszt_szoras_input <- renderUI({
teszt_input("norm_valasz_szoras", "Szórás:", input$norm_ujra)
})
output$norm_teszt_varhato_ertek_input <- renderUI({
teszt_input("norm_valasz_varhato_ertek", "Várható érték:", input$norm_ujra)
})
output$norm_teszt_surusegfvg_input <- renderUI({
teszt_input("norm_valasz_surusegfvg", "Sűrűségfüggvény:", input$norm_ujra)
})
norm_mu_ertek <- reactive({
if_else(input$norm_ujra == F, sample(-10:10, 1), sample(-10:10, 1))
})
norm_x_ertek <- reactive({
if_else(input$norm_ujra == F, sample(0:10, 1), sample(0:10, 1))
})
norm_szor_ertek <- reactive({
if_else(input$norm_ujra == F, round(runif(1, 0.1, 10), digits = 1), round(runif(1, 0.1, 10), digits = 1))
})
norm_teszt_valoszinuseg <- reactive({
teszt_valsz_folytonos(input$norm_ujra)
})
output$norm_teszt <- renderUI({
problem <- withMathJax(
sprintf(
"
$$\\mu = %g$$
$$\\sigma = %g$$
$$x= %g $$",
norm_mu_ertek(),
norm_szor_ertek(),
norm_x_ertek()
)
)
p(problem, norm_teszt_valoszinuseg())
})
norm_teszt_kisebb <- reactive({
round(pnorm(norm_x_ertek(),
norm_mu_ertek(),
norm_szor_ertek()),
digits = 3)
})
norm_teszt_nagyobb <- reactive({
round(sum(1 - pnorm(norm_x(),
norm_mu(),
norm_szor())),digits = 3)
})
norm_eredmeny_teszt <- reactive({
teszt_eredmeny_folytonos(norm_teszt_valoszinuseg(), norm_teszt_kisebb(), norm_teszt_nagyobb())
})
eredmeny_teszt_norm_varhato_ertek <- reactive({
norm_mu_ertek()
})
eredmeny_teszt_norm_szoras <- reactive({
round(norm_szor_ertek()^2,digits = 3)
})
eredmeny_teszt_norm_surusegfvg <- reactive({
round(dnorm(norm_x_ertek(), norm_mu_ertek(), norm_szor_ertek()),digits = 3)
})
output$norm_feedback_valoszinuseg <-
renderUI({
feedback(input$norm_valasz, norm_eredmeny_teszt())
})
output$norm_feedback_szoras <-
renderUI({
feedback(input$norm_valasz_szoras, eredmeny_teszt_norm_szoras())
})
output$norm_feedback_varhato_ertek <-
renderUI({
feedback(input$norm_valasz_varhato_ertek, eredmeny_teszt_norm_varhato_ertek())
})
output$norm_feedback_surusegfvg <-
renderUI({
feedback(input$norm_valasz_surusegfvg, eredmeny_teszt_norm_surusegfvg())
})
}
# Képletek
{
output$norm_tab1 <- renderUI({
tab_folytonos(input$norm_tipus)
})
norm_intervallum_keplet <- reactive({
"$$\\small{\\color{white}{
\\mathbf{P}(\\ x_1 < X < \\ x_2)=\\mathbf{P}(X< \\ x_2)-\\mathbf{P}(X< \\ x_1)}}$$"
})
norm_kisebb_keplet <- reactive({
"$$\\small{\\color{white}{
\\mathbf{P}(X<x)={\\large\\int_{\\small-\\infty}^{\\small x}}f(x,\\mu,\\sigma)dt}}$$"
})
norm_nagyobb_keplet <- reactive({
"$$\\small{\\color{white}{
\\mathbf{P}(X>x)={\\large\\int_{\\small x}^{\\small\\infty}}f(x,\\mu,\\sigma)dt}}$$"
})
output$norm_valoszinuseg_keplet <- renderUI({
keplet_folytonos(input$norm_tipus, norm_intervallum_keplet(), norm_kisebb_keplet(), norm_nagyobb_keplet())
})
norm_intervallum_keplet_interaktiv <- reactive({
sprintf(
"$$X\\sim \\mathcal{N}(\\mu,\\sigma)$$
$$\\small{\\mathbf{P}(\\color{green}{%g} < X < \\color{green}{%g})=\\mathbf{P}(X< \\color{green}{%g})-\\mathbf{P}(X< \\color{green}{%g})}$$",
input$norm_x_intervallum[1],
input$norm_x_intervallum[2],
input$norm_x_intervallum[2],
input$norm_x_intervallum[1]
)
})
norm_kisebb_keplet_interaktiv <- reactive({
sprintf(
"$$X\\sim \\mathcal{N}(\\mu,\\sigma)$$
$$\\small{ \\mathbf{P}(X<\\color{green}{%g})={\\large\\int_{\\small-\\infty}^{\\small \\color{green}{%g}}}f(\\color{green}{%g},\\color{blue}{%g},\\color{red}{%g})dt}$$",
norm_x(),
norm_x(),
norm_x(),
norm_mu(),
norm_szor()
)
})
norm_nagyobb_keplet_interaktiv <- reactive({
sprintf(
"$$X\\sim \\mathcal{N}(\\mu,\\sigma)$$
$$\\small{\\mathbf{P}(X>\\color{green}{%g})={\\large\\int_{\\small \\color{green}{%g}}^{\\small\\infty}}f(\\color{green}{%g},\\color{blue}{%g},\\color{red}{%g})dt}$$",
norm_x(),
norm_x(),
norm_x(),
norm_mu(),
norm_szor()
)
})
output$norm_valoszinuseg_keplet_interaktiv <- renderUI({
interaktiv_keplet_folytonos(input$norm_tipus, norm_intervallum_keplet_interaktiv(), norm_kisebb_keplet_interaktiv(), norm_nagyobb_keplet_interaktiv())
})
output$norm_varhato_ertek_keplet <- renderUI({
withMathJax(helpText("$$\\color{white}{\\mathbf{E}(X)= \\mu }$$"))
})
output$norm_varhato_ertek_keplet_interaktiv <- renderUI({
withMathJax(sprintf(
"$$\\mathbf{E}(X)= \\color{blue}{%g} $$",
norm_mu()
))
})
output$norm_szoras_keplet <- renderUI({
withMathJax(helpText("$$\\color{white}{\\mathbf{D}^2(X)=\\sigma^2}$$"))
})
output$norm_szoras_keplet_interaktiv <- renderUI({
withMathJax(sprintf(
"$$\\mathbf{D}^2(X)=\\color{red}{%g}^2$$",
norm_szor()
))
})
output$norm_surusegfvg_keplet_interaktiv <- renderUI({
withMathJax(
helpText(
"$$\\scriptsize{f(x)=\\dfrac{1}{\\sqrt{2\\pi}\\sigma}\\mathrm{e}^{-\\dfrac{1}{2}\\left(\\dfrac{x-\\mu}{\\sigma}\\right)^2}}$$"
),
sprintf(
"$$X\\sim \\mathcal{N}(\\mu,\\sigma)$$
$$x= %g $$
$$\\scriptsize{f(\\color{green}{%g})=\\dfrac{1}{\\sqrt{2\\pi}*\\color{red}{%g}}\\mathrm{e}^{-\\dfrac{1}{2}\\left(\\dfrac{\\color{green}{%g}-(\\color{blue}{%g})}{\\color{red}{%g}}\\right)^2}}$$
$$\\small{=\\underline{%g}}$$",
norm_x(),
norm_x(),
norm_szor(),
norm_x(),
norm_mu(),
norm_szor(),
norm_fx_eredmeny()
)
)
})
}
}
}
shinyApp(ui = ui, server = server)
setInternet2(TRUE)
source('http://github.com/cssz98/szakdolgozat/blob/master/szakdoga/project/Data/functions.R')
utils::setInternet2(TRUE)
devtools::source_url('http://github.com/cssz98/szakdolgozat/blob/master/szakdoga/project/Data/functions.R')
ui <- fluidPage(
source('http://github.com/cssz98/szakdolgozat/blob/master/szakdoga/project/Data/functions.R')
theme = "style.css",
setBackgroundImage("hatter.png"),
titlePanel(
title =
tags$link(rel = "icon", type = "image", href = "favicon.png"),
"Szakdolgozat"
),
navbarPage(
title = div(img(
src = "favicon.png",
style = "margin-top: -14px;",
height = 50
)),
tabPanel(
"Nevezetes diszkrét eloszlások",
uiOutput("diszkret"),
icon = icon("chart-bar")
),
tabPanel(
"Nevezetes folytonos eloszlások",
uiOutput("folytonos"),
icon = icon("chart-line")
),
tabPanel(
title = HTML(
"</a></li><li><a href='https://github.com/cssz98/szakdolgozat' target='_blank'> GitHub <i class='fab fa-github' style='font-size:15px;'></i>"
)
)
),
)
source('http://github.com/cssz98/szakdolgozat/blob/master/szakdoga/project/Data/functions.R')
devtools::source_url("https://github.com/tonybreyal/Blog-Reference-Functions/blob/master/R/bingSearchXScraper/bingSearchXScraper.R?raw=TRUE")
devtools::source_url("https://github.com/cssz98/szakdolgozat/blob/master/szakdoga/project/Data/functions.R?raw=TRUE")
runApp()
?source.url
source("https://github.com/cssz98/szakdolgozat/blob/master/szakdoga/project/Data/functions.R?raw=TRUE")
source("https://github.com/cssz98/szakdolgozat/blob/master/szakdoga/project/Data/functions.R?raw=TRUE")
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
styler:::style_selection()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
View(ui)
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
View(ui)
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
View(ui)
View(teszt_input)
View(tab)
View(teszt_eredmeny)
View(teszt_input)
View(valoszinuseg)
View(valsz_input_folytonos)
View(ui)
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
rbinom(10,20,0.5)
rbinom(10,20,0.5)
rbinom(10,20,0.5)
rbinom(10,20,0.5)
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?seq()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
?sample
?runif
runApp()
?eventReactive
